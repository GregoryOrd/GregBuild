1) Implement Linked List for BuildSequence list that supports inserting elements
    - This will later be exposed to allow plugins to insert build steps
2) Add in tests for the toolkit
3) Implement plugin-loader and plugin-api
4) Make sure GregBuild only uses the .o files that it needs from the toolkit lib
    directory
5) Check for dist directory in the ExampleSrcRepo. If it does not exist, create it before trying to put the final executable 
inside of it.
6) Add command line flag to leave the temp directory around
    -Can probably do this by splitting the removal of the directory
    out from removeTempDirAndFreeFileLists(), making it part of the build sequence,
    and them attaching the flag to that BuildSequenceStep
7) Give ability to swap out compilers
8) Get a code formatter for this repo
9) Add tests to this repo.
    - Use an earlier version of GregBuild and GregTest to write tests for
      future development of GregBuild and GregTest
    - Introduce some chickens and some eggs, then hope things don't get too weird with that
        - LOL :)
10) Investigate multithreaded approach for execution of test cases
    a) Figure out when the dataset is large enough that multithreading is worth it
    b) Implement logic to swtich between single and multithreaded approach based on this information
11) Can we also use a multithreaded solution for gathering the test and source files?
    a) Split the subdirectories from the top level?
    b) Each thread does a recursion starting from a second level directory and working in?
12) Add logic to check if a module has been changed since it was last build. Only build modules that have been modified.
13) Verify support for different platforms