1) Implement Linked List for BuildSequence list that supports inserting elements
    - This will later be exposed to allow plugins to insert build steps
2) Create GregCToolkit Repo and make it a submodule.
    - Move the contents of the sw/core/utils directory into this repo.
    - Might be able to move some other stuff into the toolkit as well.
        - makeDir and removeDir from FileSystemOperations.h
        - ExternalProgramExecution.h & ExternalProgramExecution.c
        - ArgListDefs.h
        - CommandLineOptions might also be able to be placed in the toolkit if
          some of the specifics can be pulled out and injected back in
        - Add in tests for the toolkit
3) Implement plugin-loader and plugin-api
4) Use wildcards inside Makefile
5) Check for dist directory in the ExampleSrcRepo. If it does not exist, create it before trying to put the final executable 
inside of it.
6) Get a code formatter for this repo
7) Add tests to this repo.
    - Use an earlier version of GregBuild and GregTest to write tests for
      future development of GregBuild and GregTest
    - Introduce some chickens and some eggs, then hope things don't get too weird with that
        - LOL :)
8) Investigate multithreaded approach for execution of test cases
    a) Figure out when the dataset is large enough that multithreading is worth it
    b) Implement logic to swtich between single and multithreaded approach based on this information
9) Can we also use a multithreaded solution for gathering the test and source files?
    a) Split the subdirectories from the top level?
    b) Each thread does a recursion starting from a second level directory and working in?
10) Add logic to check if a module has been changed since it was last build. Only build modules that have been modified.
11) Verify support for different platforms